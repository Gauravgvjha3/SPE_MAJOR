{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jay/Desktop/node/SPE_MAJOR/frontend/components/auth/LoginGoogle.js\",\n    _this = this;\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport GoogleLogin from 'react-google-login';\nimport { loginWithGoogle, authenticate, isAuth } from '../../actions/auth';\nimport { GOOGLE_CLIENT_ID } from '../../config';\nimport React from 'react';\n\nvar LoginGoogle = function LoginGoogle() {\n  var responseGoogle = function responseGoogle(response) {\n    // console.log(response);\n    var tokenId = response.tokenId;\n    var user = {\n      tokenId: tokenId\n    };\n    loginWithGoogle(user).then(function (data) {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        authenticate(data, function () {\n          if (isAuth() && isAuth().role === 1) {\n            Router.push(\"/admin\");\n          } else {\n            Router.push(\"/user\");\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pb-3\",\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: \"\".concat(GOOGLE_CLIENT_ID),\n      buttonText: \"Login with Google\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      theme: \"dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = LoginGoogle;\nexport default LoginGoogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginGoogle\");","map":{"version":3,"sources":["/home/jay/Desktop/node/SPE_MAJOR/frontend/components/auth/LoginGoogle.js"],"names":["Link","useState","useEffect","Router","GoogleLogin","loginWithGoogle","authenticate","isAuth","GOOGLE_CLIENT_ID","React","LoginGoogle","responseGoogle","response","tokenId","user","then","data","error","console","log","role","push"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,MAAxC,QAAsD,oBAAtD;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,QAAQ,EAAI;AAC/B;AACA,QAAMC,OAAO,GAAGD,QAAQ,CAACC,OAAzB;AACA,QAAMC,IAAI,GAAG;AAAED,MAAAA,OAAO,EAAPA;AAAF,KAAb;AAEAR,IAAAA,eAAe,CAACS,IAAD,CAAf,CAAsBC,IAAtB,CAA2B,UAAAC,IAAI,EAAI;AAC/B,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACH,OAFD,MAEO;AACHX,QAAAA,YAAY,CAACU,IAAD,EAAO,YAAM;AACrB,cAAIT,MAAM,MAAMA,MAAM,GAAGa,IAAT,KAAkB,CAAlC,EAAqC;AACjCjB,YAAAA,MAAM,CAACkB,IAAP;AACH,WAFD,MAEO;AACHlB,YAAAA,MAAM,CAACkB,IAAP;AACH;AACJ,SANW,CAAZ;AAOH;AACJ,KAZD;AAaH,GAlBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI,QAAC,WAAD;AACI,MAAA,QAAQ,YAAKb,gBAAL,CADZ;AAEI,MAAA,UAAU,EAAC,mBAFf;AAGI,MAAA,SAAS,EAAEG,cAHf;AAII,MAAA,SAAS,EAAEA,cAJf;AAKI,MAAA,KAAK,EAAC;AALV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAWH,CAhCD;;KAAMD,W;AAkCN,eAAeA,WAAf","sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport GoogleLogin from 'react-google-login';\nimport { loginWithGoogle, authenticate, isAuth } from '../../actions/auth';\nimport { GOOGLE_CLIENT_ID } from '../../config';\nimport React from 'react';\nconst LoginGoogle = () => {\n    const responseGoogle = response => {\n        // console.log(response);\n        const tokenId = response.tokenId;\n        const user = { tokenId };\n\n        loginWithGoogle(user).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                authenticate(data, () => {\n                    if (isAuth() && isAuth().role === 1) {\n                        Router.push(`/admin`);\n                    } else {\n                        Router.push(`/user`);\n                    }\n                });\n            }\n        });\n    };\n\n    return (\n        <div className=\"pb-3\">\n            <GoogleLogin\n                clientId={`${GOOGLE_CLIENT_ID}`}\n                buttonText=\"Login with Google\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                theme=\"dark\"\n            />\n        </div>\n    );\n};\n\nexport default LoginGoogle;\n"]},"metadata":{},"sourceType":"module"}