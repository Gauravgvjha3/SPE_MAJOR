{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport queryString from 'query-string';\nimport { isAuth, handleResponse } from './auth'; //Done already\n\nexport var createBlog = function createBlog(blog, token) {\n  console.log(\"Creat blog called\");\n  var createBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    createBlogEndpoint = \"\".concat(API, \"/blog\");\n  } else if (isAuth() && isAuth().role === 0) {\n    createBlogEndpoint = \"\".concat(API, \"/user/blog\");\n  }\n\n  return fetch(\"\".concat(createBlogEndpoint), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; //Done\n\nexport var listBlogsWithCategoriesAndTags = function listBlogsWithCategoriesAndTags(skip, limit, userid) {\n  console.log(\"List blog with Categories called  with \".concat(skip, \",\").concat(limit, \",\").concat(userid));\n  var data = {\n    limit: limit,\n    skip: skip,\n    userid: userid\n  };\n  return fetch(\"\".concat(API, \"/blogs-categories-tags\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var singleBlog = function singleBlog() {\n  var slug = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n  var userid = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"Single blogsasasasasas called wiht slug \".concat(slug, \" with userif \").concat(userid));\n\n  var userid1 = isAuth() && isAuth()._id;\n\n  console.log(\"printig Single \".concat(userid1));\n  return fetch(\"\".concat(API, \"/blog/\").concat(slug, \"/\").concat(userid1), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listRelated = function listRelated(blog, userid) {\n  console.log(\"list related called \".concat(userid));\n  return fetch(\"\".concat(API, \"/blogs/related\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(blog)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; //\n\nexport var list = function list(username) {\n  console.log(\"LisT called \".concat(username));\n  var listBlogsEndpoint;\n\n  if (username) {\n    listBlogsEndpoint = \"\".concat(API, \"/\").concat(username, \"/blogs\");\n  } else {\n    listBlogsEndpoint = \"\".concat(API, \"/blogs\");\n  }\n\n  return fetch(\"\".concat(listBlogsEndpoint), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; //\n\nexport var removeBlog = function removeBlog(slug, token) {\n  console.log(\"remove blog called\");\n  var deleteBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    deleteBlogEndpoint = \"\".concat(API, \"/blog/\").concat(slug);\n  } else if (isAuth() && isAuth().role === 0) {\n    deleteBlogEndpoint = \"\".concat(API, \"/user/blog/\").concat(slug);\n  }\n\n  return fetch(\"\".concat(deleteBlogEndpoint), {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; //\n\nexport var updateBlog = function updateBlog(blog, token, slug) {\n  var updateBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    updateBlogEndpoint = \"\".concat(API, \"/blog/\").concat(slug);\n  } else if (isAuth() && isAuth().role === 0) {\n    updateBlogEndpoint = \"\".concat(API, \"/user/blog/\").concat(slug);\n  }\n\n  return fetch(\"\".concat(updateBlogEndpoint), {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    handleResponse(response);\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listSearch = function listSearch(params) {\n  console.log('search params', params);\n  var query = queryString.stringify(params);\n  console.log('query params', query);\n  return fetch(\"\".concat(API, \"/blogs/search?\").concat(query), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["/home/jay/Desktop/node/SPE_MAJOR/frontend/actions/blog.js"],"names":["fetch","API","queryString","isAuth","handleResponse","createBlog","blog","token","console","log","createBlogEndpoint","role","method","headers","Accept","Authorization","body","then","response","json","err","listBlogsWithCategoriesAndTags","skip","limit","userid","data","JSON","stringify","singleBlog","slug","undefined","userid1","_id","listRelated","list","username","listBlogsEndpoint","removeBlog","deleteBlogEndpoint","updateBlog","updateBlogEndpoint","listSearch","params","query"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport queryString from 'query-string';\nimport { isAuth, handleResponse } from './auth';\n\n//Done already\nexport const createBlog = (blog, token) => {\n    console.log(`Creat blog called`);\n    \n    let createBlogEndpoint;\n\n    if (isAuth() && isAuth().role === 1) {\n        createBlogEndpoint = `${API}/blog`;\n    } else if (isAuth() && isAuth().role === 0) {\n        createBlogEndpoint = `${API}/user/blog`;\n    }\n\n    return fetch(`${createBlogEndpoint}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: blog\n    })\n        .then(response => {\n            handleResponse(response);\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//Done\nexport const listBlogsWithCategoriesAndTags = (skip, limit,userid) => {\n    console.log(`List blog with Categories called  with ${skip},${limit},${userid}`);\n    const data = {\n        limit,\n        skip,\n        userid\n    };\n    return fetch(`${API}/blogs-categories-tags`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\nexport const singleBlog = (slug = undefined,userid) => {\n    console.log(`Single blogsasasasasas called wiht slug ${slug} with userif ${userid}`);\n    let userid1=isAuth() && isAuth()._id;\n    console.log(`printig Single ${userid1}`);\n    return fetch(`${API}/blog/${slug}/${userid1}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\nexport const listRelated = (blog,userid) => {\n    console.log(`list related called ${userid}`);\n    return fetch(`${API}/blogs/related`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(blog)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//\nexport const list = username => {\n    console.log(`LisT called ${username}`);\n    let listBlogsEndpoint;\n\n    if (username) {\n        listBlogsEndpoint = `${API}/${username}/blogs`;\n    } else {\n        listBlogsEndpoint = `${API}/blogs`;\n    }\n\n    return fetch(`${listBlogsEndpoint}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//\nexport const removeBlog = (slug, token) => {\n    console.log(`remove blog called`);\n    let deleteBlogEndpoint;\n\n    if (isAuth() && isAuth().role === 1) {\n        deleteBlogEndpoint = `${API}/blog/${slug}`;\n    } else if (isAuth() && isAuth().role === 0) {\n        deleteBlogEndpoint = `${API}/user/blog/${slug}`;\n    }\n\n    return fetch(`${deleteBlogEndpoint}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            handleResponse(response);\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//\nexport const updateBlog = (blog, token, slug) => {\n    let updateBlogEndpoint;\n\n    if (isAuth() && isAuth().role === 1) {\n        updateBlogEndpoint = `${API}/blog/${slug}`;\n    } else if (isAuth() && isAuth().role === 0) {\n        updateBlogEndpoint = `${API}/user/blog/${slug}`;\n    }\n\n    return fetch(`${updateBlogEndpoint}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: blog\n    })\n        .then(response => {\n            handleResponse(response);\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const listSearch = params => {\n    console.log('search params', params);\n    let query = queryString.stringify(params);\n    console.log('query params', query);\n    return fetch(`${API}/blogs/search?${query}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}