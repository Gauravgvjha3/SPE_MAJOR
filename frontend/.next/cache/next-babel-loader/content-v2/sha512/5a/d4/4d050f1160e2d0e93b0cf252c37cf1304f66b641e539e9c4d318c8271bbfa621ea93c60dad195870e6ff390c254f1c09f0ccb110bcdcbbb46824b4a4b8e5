{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jay/Desktop/node/SPE_MAJOR/frontend/components/auth/Analytics.js\";\nimport { useState, useEffect } from 'react';\nimport { signup, isAuth, preSignup } from '../../actions/auth';\nimport fetch from 'isomorphic-fetch';\nimport { API } from '../../config';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calendar from 'react-github-contribution-calendar';\n\nconst Analytics = () => {\n  const {\n    0: post,\n    1: setPost\n  } = useState([]);\n  useEffect(() => {\n    let id = isAuth() && isAuth()._id;\n\n    analysis(id);\n  }, []);\n\n  const getValues = () => {\n    let tem = {};\n    post.forEach(obj => {\n      tem[obj._id] = obj.count;\n    });\n    var values = {\n      '2016-06-23': 1,\n      '2016-06-26': 2,\n      '2016-06-27': 3,\n      '2016-06-28': 4,\n      '2016-06-29': 4\n    }; //   var until = '2016-06-30';\n\n    return values;\n  };\n\n  const analysis = userid => {\n    console.log(\"call Analyssis \", userid);\n    return fetch(`${API}/analytics/${userid}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json'\n      }\n    }).then(response => {\n      const data = response.json().then(data => {\n        setPost(data);\n      });\n    }).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Analytics Comes Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 42\n    }, this), post ? /*#__PURE__*/_jsxDEV(Calendar, {\n      values: getValues(),\n      until: \"2016-06-30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Analytics;","map":{"version":3,"sources":["/home/jay/Desktop/node/SPE_MAJOR/frontend/components/auth/Analytics.js"],"names":["useState","useEffect","signup","isAuth","preSignup","fetch","API","React","ReactDOM","Calendar","Analytics","post","setPost","id","_id","analysis","getValues","tem","forEach","obj","count","values","userid","console","log","method","headers","Accept","then","response","data","json","catch","err","error"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAGA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAGpB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAMC;AAAN,MAAiBZ,QAAQ,CAAC,EAAD,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,EAAE,GAACV,MAAM,MAAMA,MAAM,GAAGW,GAA5B;;AACAC,IAAAA,QAAQ,CAACF,EAAD,CAAR;AAEH,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMG,SAAS,GAAG,MAAI;AAElB,QAAIC,GAAG,GAAG,EAAV;AACAN,IAAAA,IAAI,CAACO,OAAL,CAAcC,GAAD,IAAO;AAChBF,MAAAA,GAAG,CAACE,GAAG,CAACL,GAAL,CAAH,GAAeK,GAAG,CAACC,KAAnB;AACH,KAFD;AAGA,QAAIC,MAAM,GAAG;AACT,oBAAc,CADL;AAET,oBAAc,CAFL;AAGT,oBAAc,CAHL;AAIT,oBAAc,CAJL;AAKT,oBAAc;AALL,KAAb,CANkB,CAalB;;AACA,WAAOA,MAAP;AACH,GAfD;;AAiBA,QAAMN,QAAQ,GAAEO,MAAD,IAAU;AAErBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BF,MAA9B;AACA,WAAOjB,KAAK,CAAE,GAAEC,GAAI,cAAagB,MAAO,EAA5B,EAA+B;AACvCG,MAAAA,MAAM,EAAE,KAD+B;AAEvCC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE;AADH;AAF8B,KAA/B,CAAL,CAONC,IAPM,CAOCC,QAAD,IAAc;AACb,YAAMC,IAAI,GAACD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsBE,IAAD,IAAQ;AACpClB,QAAAA,OAAO,CAACkB,IAAD,CAAP;AACH,OAFU,CAAX;AAIH,KAZE,EAaNE,KAbM,CAaAC,GAAG,IAAIV,OAAO,CAACW,KAAR,CAAcD,GAAd,CAbP,CAAP;AAcH,GAjBD;;AAmBA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eACiC;AAAA;AAAA;AAAA;AAAA,YADjC,EAEMtB,IAAI,gBAAG,QAAC,QAAD;AAAU,MAAA,MAAM,EAAIK,SAAS,EAA7B;AAAiC,MAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAAH,GAA2D,IAFrE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAtDD;;AAwDA,eAAeN,SAAf","sourcesContent":["import { useState, useEffect} from 'react';\nimport { signup, isAuth, preSignup } from '../../actions/auth';\n\n\nimport fetch from 'isomorphic-fetch';\n\nimport { API } from '../../config';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calendar from 'react-github-contribution-calendar';\n\n  \nconst Analytics = () => {\n    \n    \n    const [post,setPost] = useState([]);\n\n    useEffect(() => {\n        let id=isAuth() && isAuth()._id;\n        analysis(id);\n\n    },[]);\n\n    const getValues = ()=>{\n\n        let tem = {}\n        post.forEach((obj)=>{\n            tem[obj._id] = obj.count;\n        })\n        var values = {\n            '2016-06-23': 1,\n            '2016-06-26': 2,\n            '2016-06-27': 3,\n            '2016-06-28': 4,\n            '2016-06-29': 4\n          }\n        //   var until = '2016-06-30';\n        return values;\n    }\n\n    const analysis=(userid)=>{\n\n        console.log(\"call Analyssis \",userid);\n        return fetch(`${API}/analytics/${userid}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json'\n            }\n        }\n        )\n        .then( (response) => {\n                const data=response.json().then((data)=>{\n                    setPost(data);\n                })\n                \n            })\n        .catch(err => console.error(err));\n    };\n\n    return (\n        <React.Fragment>\n            <h1>Analytics Comes Here</h1><br/>\n            { post ? <Calendar values = {getValues()} until='2016-06-30'/> : null } \n        </React.Fragment>\n    );\n        \n};\n\nexport default Analytics;\n"]},"metadata":{},"sourceType":"module"}