{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jay/Desktop/node/SPE_MAJOR/frontend/components/auth/Analytics.js\";\nimport { useState, useEffect } from 'react';\nimport { signup, isAuth, preSignup } from '../../actions/auth';\nimport fetch from 'isomorphic-fetch';\nimport { API } from '../../config';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport ReactTooltip from 'react-tooltip';\nimport 'react-calendar-heatmap/dist/styles.css';\nconst today = new Date();\n\nconst Analytics = () => {\n  const {\n    0: post,\n    1: setPost\n  } = useState([]);\n  useEffect(() => {\n    let id = isAuth() && isAuth()._id;\n\n    analysis(id);\n  }, []);\n\n  const getValues = () => {\n    let values = {};\n    post.forEach(obj => {\n      const tem = {};\n      tem.date = obj._id;\n      tem.count = obj.count;\n      values.append(tem);\n    });\n    var values2 = {\n      '2016-06-23': 1,\n      '2016-06-26': 2,\n      '2016-06-27': 3,\n      '2016-06-28': 4,\n      '2016-06-29': 4\n    }; //   var until = '2016-06-30';\n\n    return values;\n  };\n\n  const analysis = userid => {\n    console.log(\"call Analyssis \", userid);\n    return fetch(`${API}/analytics/${userid}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json'\n      }\n    }).then(response => {\n      const data = response.json().then(data => {\n        setPost(data);\n      });\n    }).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Analytics Comes Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 42\n    }, this), post ? /*#__PURE__*/_jsxDEV(CalendarHeatmap, {\n      startDate: shiftDate(today, -150),\n      endDate: today,\n      values: getValues(),\n      classForValue: value => {\n        if (!value) {\n          return 'color-empty';\n        }\n\n        return `color-github-${value.count}`;\n      },\n      tooltipDataAttrs: value => {\n        return {\n          'data-tip': `${value.date.toISOString().slice(0, 10)} has count: ${value.count}`\n        };\n      },\n      showWeekdayLabels: true,\n      onClick: value => alert(`Clicked on value with count: ${value.count}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Analytics;","map":{"version":3,"sources":["/home/jay/Desktop/node/SPE_MAJOR/frontend/components/auth/Analytics.js"],"names":["useState","useEffect","signup","isAuth","preSignup","fetch","API","React","ReactDOM","CalendarHeatmap","ReactTooltip","today","Date","Analytics","post","setPost","id","_id","analysis","getValues","values","forEach","obj","tem","date","count","append","values2","userid","console","log","method","headers","Accept","then","response","data","json","catch","err","error","shiftDate","value","toISOString","slice","alert"],"mappings":"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","sourcesContent":["import { useState, useEffect} from 'react';\nimport { signup, isAuth, preSignup } from '../../actions/auth';\n\n\nimport fetch from 'isomorphic-fetch';\n\nimport { API } from '../../config';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport ReactTooltip from 'react-tooltip';\n\nimport 'react-calendar-heatmap/dist/styles.css';\n\nconst today = new Date();\n  \nconst Analytics = () => {\n    \n    \n    const [post,setPost] = useState([]);\n\n    useEffect(() => {\n        let id=isAuth() && isAuth()._id;\n        analysis(id);\n\n    },[]);\n\n    const getValues = ()=>{\n\n        let values = {}\n        post.forEach((obj)=>{\n            const tem = {}\n            tem.date = obj._id;\n            tem.count = obj.count;\n            values.append(tem);\n        })\n        var values2 = {\n            '2016-06-23': 1,\n            '2016-06-26': 2,\n            '2016-06-27': 3,\n            '2016-06-28': 4,\n            '2016-06-29': 4\n          }\n        //   var until = '2016-06-30';\n        return values;\n    }\n\n    const analysis=(userid)=>{\n\n        console.log(\"call Analyssis \",userid);\n        return fetch(`${API}/analytics/${userid}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json'\n            }\n        }\n        )\n        .then( (response) => {\n                const data=response.json().then((data)=>{\n                    setPost(data);\n                })\n                \n            })\n        .catch(err => console.error(err));\n    };\n\n    return (\n        <React.Fragment>\n            <h1>Analytics Comes Here</h1><br/>\n            { post ? \n\n            <CalendarHeatmap\n                startDate={shiftDate(today, -150)}\n                endDate={today}\n                values={getValues()}\n\n                classForValue={value => {\n                if (!value) {\n                    return 'color-empty';\n                }\n                return `color-github-${value.count}`;\n                }}\n                tooltipDataAttrs={value => {\n                return {\n                    'data-tip': `${value.date.toISOString().slice(0, 10)} has count: ${\n                    value.count\n                    }`,\n                };\n                }}\n                showWeekdayLabels={true}\n                onClick={value => alert(`Clicked on value with count: ${value.count}`)}\n            />\n            :null}\n\n        </React.Fragment>\n    );\n        \n};\n\nexport default Analytics;\n"]},"metadata":{},"sourceType":"module"}