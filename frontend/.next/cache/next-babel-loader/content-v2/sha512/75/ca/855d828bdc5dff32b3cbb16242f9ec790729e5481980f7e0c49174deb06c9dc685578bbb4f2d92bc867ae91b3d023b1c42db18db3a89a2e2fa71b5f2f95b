{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jay/Desktop/node/SPE_MAJOR/frontend/components/auth/Analytics.js\";\nimport { useState, useEffect } from 'react';\nimport { signup, isAuth, preSignup } from '../../actions/auth';\nimport fetch from 'isomorphic-fetch';\nimport { API } from '../../config';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calendar from 'react-github-contribution-calendar';\n\nconst Analytics = () => {\n  const {\n    post,\n    setPost\n  } = useState({\n    \"post\": \"hello\"\n  });\n  console.log(\"state  = \", post);\n  useEffect(() => {\n    let id = isAuth() && isAuth()._id;\n\n    analysis(id);\n  });\n\n  const analysis = userid => {\n    console.log(\"call Analyssis \", userid);\n    return fetch(`${API}/analytics/${userid}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json'\n      }\n    }).then(response => {\n      const data = response.data;\n      console.log(\"data from server\", data);\n      setPost(data);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Analytics Comes Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Analytics;","map":{"version":3,"sources":["/home/jay/Desktop/node/SPE_MAJOR/frontend/components/auth/Analytics.js"],"names":["useState","useEffect","signup","isAuth","preSignup","fetch","API","React","ReactDOM","Calendar","Analytics","post","setPost","console","log","id","_id","analysis","userid","method","headers","Accept","then","response","data","catch","err"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,SAAzB,QAA0C,oBAA1C;AAGA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAGpB,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAiBZ,QAAQ,CAAC;AAAC,YAAO;AAAR,GAAD,CAA/B;AAEAa,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBH,IAAxB;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,EAAE,GAACZ,MAAM,MAAMA,MAAM,GAAGa,GAA5B;;AACAC,IAAAA,QAAQ,CAACF,EAAD,CAAR;AAEH,GAJQ,CAAT;;AAMA,QAAME,QAAQ,GAAEC,MAAD,IAAU;AACrBL,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BI,MAA9B;AACA,WAAOb,KAAK,CAAE,GAAEC,GAAI,cAAaY,MAAO,EAA5B,EAA+B;AACvCC,MAAAA,MAAM,EAAE,KAD+B;AAEvCC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE;AADH;AAF8B,KAA/B,CAAL,CAMNC,IANM,CAMDC,QAAQ,IAAI;AACV,YAAMC,IAAI,GAACD,QAAQ,CAACC,IAApB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BU,IAA/B;AACAZ,MAAAA,OAAO,CAACY,IAAD,CAAP;AACH,KAVE,EAWNC,KAXM,CAWAC,GAAG,IAAIb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAXP,CAAP;AAYH,GAdD;;AAgBA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eACiC;AAAA;AAAA;AAAA;AAAA,YADjC,eAEI;AAAA,gBAAKf;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAnCD;;AAqCA,eAAeD,SAAf","sourcesContent":["import { useState, useEffect} from 'react';\nimport { signup, isAuth, preSignup } from '../../actions/auth';\n\n\nimport fetch from 'isomorphic-fetch';\n\nimport { API } from '../../config';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calendar from 'react-github-contribution-calendar';\n\n  \nconst Analytics = () => {\n    \n    \n    const {post,setPost} = useState({\"post\":\"hello\"});\n\n    console.log(\"state  = \",post);\n    useEffect(() => {\n        let id=isAuth() && isAuth()._id;\n        analysis(id);\n\n    });\n\n    const analysis=(userid)=>{\n        console.log(\"call Analyssis \",userid);\n        return fetch(`${API}/analytics/${userid}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json'\n            }\n        })\n        .then(response => {\n                const data=response.data;\n                console.log(\"data from server\",data);\n                setPost(data);\n            })\n        .catch(err => console.log(err));\n    };\n\n    return (\n        <React.Fragment>\n            <h1>Analytics Comes Here</h1><br/>\n            <h1>{post}</h1>\n        </React.Fragment>\n    );\n        \n};\n\nexport default Analytics;\n"]},"metadata":{},"sourceType":"module"}