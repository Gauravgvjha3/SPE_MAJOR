{"ast":null,"code":"// import fetch from 'isomorphic-fetch';\n// import {API} from '../config';\n// console.log('${API}');\n// export const signup = user => {\n//     return fetch(`${API}/signup`, {\n//     // return fetch('http://localhost:8000/signup', {\n//         method: 'POST',\n//         headers: {\n//             Accept: 'application/json',\n//             'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(user)\n//     }).then(response => {\n//             return response.json();\n//         }).catch(error => console.log(error));\n// };\n// change static API to dynamic API\nimport fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport const signup = user => {\n  return fetch('http://localhost:8000/api/signup', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = user => {\n  return fetch('http://localhost:8000/api/signin', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; // set cookie\n\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // get cookie\n\nexport const getCookie = key => {\n  if (false) {\n    cookie.get(key);\n  }\n}; // localstorage\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n}; // autheticate user by pass data to cookie and localstorage\n\nexport const authenticate = (data, next) => {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n};\nexport const isAuth = () => {\n  if (false) {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/home/jay/Desktop/node/SPE_MAJOR/frontend/actions/auth.js"],"names":["fetch","API","signup","user","method","headers","Accept","body","JSON","stringify","then","response","json","catch","err","console","log","signin","setCookie","key","value","cookie","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeLocalStorage","removeItem","authenticate","data","next","token","isAuth","cookieChecked","getItem","parse"],"mappings":"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","sourcesContent":["// import fetch from 'isomorphic-fetch';\n// import {API} from '../config';\n// console.log('${API}');\n// export const signup = user => {\n//     return fetch(`${API}/signup`, {\n//     // return fetch('http://localhost:8000/signup', {\n//         method: 'POST',\n//         headers: {\n//             Accept: 'application/json',\n//             'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(user)\n//     }).then(response => {\n//             return response.json();\n//         }).catch(error => console.log(error));\n// };\n// change static API to dynamic API\nimport fetch from 'isomorphic-fetch';\nimport { API } from '../config';\n\nexport const signup = user => {\n    return fetch('http://localhost:8000/api/signup', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const signin = user => {\n    return fetch('http://localhost:8000/api/signin', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n// set cookie\nexport const setCookie = (key, value) => {\n    if (process.browser) {\n        cookie.set(key, value, {\n            expires: 1\n        });\n    }\n};\n\nexport const removeCookie = key => {\n    if (process.browser) {\n        cookie.remove(key, {\n            expires: 1\n        });\n    }\n};\n// get cookie\nexport const getCookie = key => {\n    if (process.browser) {\n        cookie.get(key);\n    }\n};\n// localstorage\nexport const setLocalStorage = (key, value) => {\n    if (process.browser) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n};\n\nexport const removeLocalStorage = key => {\n    if (process.browser) {\n        localStorage.removeItem(key);\n    }\n};\n// autheticate user by pass data to cookie and localstorage\nexport const authenticate = (data, next) => {\n    setCookie('token', data.token);\n    setLocalStorage('user', data.user);\n    next();\n};\n\nexport const isAuth = () => {\n    if (process.browser) {\n        const cookieChecked = getCookie('token');\n        if (cookieChecked) {\n            if (localStorage.getItem('user')) {\n                return JSON.parse(localStorage.getItem('user'));\n            } else {\n                return false;\n            }\n        }\n    }\n};"]},"metadata":{},"sourceType":"module"}