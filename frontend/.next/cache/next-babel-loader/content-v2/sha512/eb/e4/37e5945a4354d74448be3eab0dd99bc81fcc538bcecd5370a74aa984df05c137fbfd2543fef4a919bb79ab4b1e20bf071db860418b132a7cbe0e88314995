{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jay/Desktop/node/SPE_MAJOR/frontend/components/auth/Analytics.js\",\n    _this = this;\n\nimport { useState, useEffect } from 'react';\nimport { signup, isAuth, preSignup } from '../../actions/auth';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calendar from 'react-github-contribution-calendar';\nimport { post } from '../../../backend/routes/blog';\n\nvar Analytics = function Analytics() {\n  state = {\n    post: []\n  };\n\n  analysis = function analysis(userid) {\n    return fetch(\"\".concat(API, \"/analytics/\").concat(userid), {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json'\n      }\n    }).then(function (response) {\n      var data = response.data;\n\n      _this.setState({\n        post: data\n      });\n\n      return response.json();\n      console.log(\"data recieve\");\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  var id = isAuth() && isAuth()._id;\n\n  _this.analysis(id);\n\n  return (\n    /*#__PURE__*/\n    // ReactDOM.render(<Calendar values={values} until={until} />, elem)\n    _jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Analytics Comes Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, _this)\n  );\n};\n\n_c = Analytics;\nexport default Analytics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"sources":["/home/jay/Desktop/node/SPE_MAJOR/frontend/components/auth/Analytics.js"],"names":["useState","useEffect","signup","isAuth","preSignup","Router","Link","React","ReactDOM","Calendar","post","Analytics","state","analysis","userid","fetch","API","method","headers","Accept","then","response","data","setState","json","console","log","err","id","_id"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAASC,IAAT,QAAqB,8BAArB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBC,EAAAA,KAAK,GAAC;AACFF,IAAAA,IAAI,EAAE;AADJ,GAAN;;AAIAG,EAAAA,QAAQ,GAAC,kBAACC,MAAD,EAAU;AACf,WAAOC,KAAK,WAAIC,GAAJ,wBAAqBF,MAArB,GAA+B;AACvCG,MAAAA,MAAM,EAAE,KAD+B;AAEvCC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE;AADH;AAF8B,KAA/B,CAAL,CAMFC,IANE,CAMG,UAAAC,QAAQ,EAAI;AACd,UAAMC,IAAI,GAACD,QAAQ,CAACC,IAApB;;AACA,MAAA,KAAI,CAACC,QAAL,CAAc;AAACb,QAAAA,IAAI,EAAEY;AAAP,OAAd;;AACA,aAAOD,QAAQ,CAACG,IAAT,EAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,KAXE,WAYI,UAAAC,GAAG;AAAA,aAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,KAZP,CAAP;AAaH,GAdD;;AAiBA,MAAIC,EAAE,GAACzB,MAAM,MAAMA,MAAM,GAAG0B,GAA5B;;AACA,EAAA,KAAI,CAAChB,QAAL,CAAce,EAAd;;AAEA;AAAA;AACI;AACA,YAAC,KAAD,CAAO,QAAP;AAAA,6BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAQH,CAjCD;;KAAMjB,S;AAmCN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { signup, isAuth, preSignup } from '../../actions/auth';\nimport Router from 'next/router';\nimport Link from 'next/link';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calendar from 'react-github-contribution-calendar';\nimport { post } from '../../../backend/routes/blog';\n  \nconst Analytics = () => {\n    state={\n        post: []\n    };\n\n    analysis=(userid)=>{\n        return fetch(`${API}/analytics/${userid}`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json'\n            }\n        })\n            .then(response => {\n                const data=response.data;\n                this.setState({post: data});\n                return response.json();\n                console.log(\"data recieve\");\n            })\n            .catch(err => console.log(err));\n    };\n    \n  \n    let id=isAuth() && isAuth()._id; \n    this.analysis(id);\n \n    return (\n        // ReactDOM.render(<Calendar values={values} until={until} />, elem)\n        <React.Fragment>\n            \n            <h1>Analytics Comes Here</h1>\n            {/* {post} */}\n        </React.Fragment>\n    );\n};\n\nexport default Analytics;\n"]},"metadata":{},"sourceType":"module"}